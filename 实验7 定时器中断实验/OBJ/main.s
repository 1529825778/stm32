; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --split_sections --debug -c -S -o..\obj\main.s --depend=..\obj\main.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\USER -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HALLIB\STM32H7xx_HAL_Driver\Inc -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\WWDG -I..\HARDWARE\TIMER -I..\SYSTEM\quicklz -ID:\keil5\Packs\Keil\STM32H7xx_DFP\2.4.0\Drivers\CMSIS\Device\ST\STM32H7xx\Include -D__UVISION_VERSION=537 -DSTM32H743xx -DUSE_HAL_DRIVER -DSTM32H743xx --omf_browse=..\obj\main.crf main.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA RAMCODE, CODE, READONLY, ALIGN=1

ram_func PROC
        MOVS     r0,#0
        ADDS     r0,r0,#1
        BX       lr
        ENDP


        AREA ||i.main||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_percent
        REQUIRE _printf_d
        REQUIRE _printf_x
        REQUIRE _printf_int_dec
        REQUIRE _printf_longlong_hex
main PROC
        SUB      sp,sp,#0xcc00
        NOP      
        BL       Cache_Enable
        BL       HAL_Init
        MOVS     r3,#4
        MOVS     r2,#2
        MOVS     r1,#5
        MOVS     r0,#0xa0
        BL       Stm32_Clock_Init
        MOV      r0,#0x190
        BL       delay_init
        MOV      r0,#0x1c200
        BL       uart_init
        BL       LED_Init
        MOV      r1,#0x4e1f
        MOVS     r0,#9
        BL       TIM3_Init
        MOVS     r1,#0x63
        MOVS     r0,#9
        BL       TIM4_Init
        MOV      r0,#0xc800
        BL       CompressInit
        ADR      r0,|L1.208|
        BL       __2printf
        LDR      r2,|L1.224|
        LDR      r1,|L1.228|
        ADR      r0,|L1.232|
        BL       __2printf
        LDR      r2,|L1.240|
        LDR      r1,|L1.244|
        ADR      r0,|L1.232|
        BL       __2printf
        LDR      r2,|L1.248|
        LDR      r1,|L1.252|
        ADR      r0,|L1.232|
        BL       __2printf
        LDR      r7,|L1.256|
        LDR      r2,|L1.240|
        LDR      r1,|L1.244|
        MOV      r0,r7
        BL       __aeabi_memcpy
        MOVS     r6,#0
        B        |L1.188|
|L1.124|
        MOVS     r4,#0
        B        |L1.164|
|L1.128|
        LDR      r0,|L1.260|
        LDR      r0,[r0,#0]  ; seed
        BL       srand
        BL       rand
        MOV      r5,r0
        ASRS     r0,r0,#31
        ADD      r0,r5,r0,LSR #24
        ASRS     r0,r0,#8
        SUB      r0,r5,r0,LSL #8
        MOV      r1,#0xc818
        ADD      r1,r1,sp
        STRB     r0,[r1,r4]
        ADDS     r4,r4,#1
|L1.164|
        CMP      r4,#0x3e8
        BLT      |L1.128|
        ADD      r3,sp,#0x14
        ADD      r2,sp,#0x18
        MOV      r1,#0x3e8
        ADD      r0,r2,#0xc800
        BL       LogCompress
        ADDS     r6,r6,#1
|L1.188|
        MOV      r0,#0x1770
        CMP      r6,r0
        BLT      |L1.124|
        ADD      r1,sp,#0x14
        ADD      r0,sp,#0x18
        BL       CompressRelease
        NOP      
|L1.206|
        B        |L1.206|
        ENDP

|L1.208|
        DCB      "hello word!\r\n",0
        DCB      0
        DCB      0
|L1.224|
        DCD      ||Load$$LR$$LR_IROM1$$Length||
|L1.228|
        DCD      ||Load$$LR$$LR_IROM1$$Base||
|L1.232|
        DCB      "%x,%d\r\n",0
|L1.240|
        DCD      ||RAMCODE$$Length||
|L1.244|
        DCD      ||RAMCODE$$Base||
|L1.248|
        DCD      ||Image$$RW_IRAM1$$RO$$Length||
|L1.252|
        DCD      ||Image$$RW_IRAM1$$RO$$Base||
|L1.256|
        DCD      0x24030000
|L1.260|
        DCD      seed

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=1

UARTPrescTable
        DCW      0x0001,0x0002
        DCW      0x0004,0x0006
        DCW      0x0008,0x000a
        DCW      0x000c,0x0010
        DCW      0x0020,0x0040
        DCW      0x0080,0x0100
USARTPrescTable
        DCW      0x0001,0x0002
        DCW      0x0004,0x0006
        DCW      0x0008,0x000a
        DCW      0x000c,0x0010
        DCW      0x0020,0x0040
        DCW      0x0080,0x0100

;*** Start embedded assembler ***

#line 1 "main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 447 "..\\CORE\\cmsis_armcc.h"
|__asm___6_main_c_main____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 462
|__asm___6_main_c_main____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____RRX|
#line 649
|__asm___6_main_c_main____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

__ARM_use_no_argv EQU 0

        EXPORT __ARM_use_no_argv
        EXPORT ram_func [CODE]
        EXPORT main [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT Cache_Enable [CODE]
        IMPORT HAL_Init [CODE]
        IMPORT Stm32_Clock_Init [CODE]
        IMPORT delay_init [CODE]
        IMPORT uart_init [CODE]
        IMPORT LED_Init [CODE]
        IMPORT TIM3_Init [CODE]
        IMPORT TIM4_Init [CODE]
        IMPORT CompressInit [CODE]
        IMPORT __2printf [CODE]
        IMPORT _printf_percent [CODE]
        IMPORT _printf_d [CODE]
        IMPORT _printf_x [CODE]
        IMPORT _printf_int_dec [CODE]
        IMPORT _printf_longlong_hex [CODE]
        IMPORT __aeabi_memcpy [CODE]
        IMPORT srand [CODE]
        IMPORT rand [CODE]
        IMPORT LogCompress [CODE]
        IMPORT CompressRelease [CODE]
        IMPORT ||Load$$LR$$LR_IROM1$$Length|| [DATA]
        IMPORT ||Load$$LR$$LR_IROM1$$Base|| [DATA]
        IMPORT ||RAMCODE$$Length|| [DATA]
        IMPORT ||RAMCODE$$Base|| [DATA]
        IMPORT ||Image$$RW_IRAM1$$RO$$Length|| [DATA]
        IMPORT ||Image$$RW_IRAM1$$RO$$Base|| [DATA]
        IMPORT seed [DATA]

        KEEP UARTPrescTable
        KEEP USARTPrescTable

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
